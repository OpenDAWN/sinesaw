// Generated by CoffeeScript 1.7.1
var App, ImmutableData, React, SongBridge;

ImmutableData = require('./util/immutable_data');

React = require('react/addons');

SongBridge = require('./models/song_bridge');

App = require('./ui/app');

if (process.env.NODE_ENV === 'development') {
  (require('build-status')).client();
  window.React = React;
  window.App = App;
  window.SongBridge = SongBridge;
  window.Track = require('./models/track');
  window.DrumSampler = require('./models/drum_sampler');
  window.BasicSampler = require('./models/basic_sampler');
  window.TrackSelection = require('./ui/track_selection');
  window.Meter = require('./ui/meter');
  window.PianoRoll = require('./ui/piano_roll');
  window.GridLines = require('./ui/piano_roll/grid_lines');
  window.Keys = require('./ui/piano_roll/keys');
  window.Notes = require('./ui/piano_roll/notes');
  window.PlaybackMarker = require('./ui/piano_roll/playback_marker');
  window.Selection = require('./ui/piano_roll/selection');
}

document.addEventListener('DOMContentLoaded', function() {
  return require('./extra/default_song')(function(songData) {
    var data, frame, history, render, song;
    song = new SongBridge;
    data = null;
    history = null;
    render = function() {
      return React.render(React.createElement(App, {
        song: song,
        data: data,
        history: history
      }), document.body);
    };
    ImmutableData.create(songData, function(d, h) {
      data = d;
      history = h;
      song.update(data);
      return render(song, data, history);
    });
    frame = (function(_this) {
      return function() {
        React.render(React.createElement(App, {
          song: song,
          data: data,
          history: history
        }), document.body);
        return requestAnimationFrame(frame);
      };
    })(this);
    return frame();
  });
});

//# sourceMappingURL=index.map
