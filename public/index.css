html {
  height: 100%;
  overflow: hidden;
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  cursor: inherit;
}
body {
  font: 400 9px roboto, sans-serif;
  background: #e9e9e9;
  color: #6f6f6f;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
  -webkit-user-select: none;
  cursor: default;
}
label {
  color: #6f6f6f;
  display: block;
  text-align: center;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  margin: 8px 0 0;
  padding: 8px 0 0;
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
}
::-webkit-scrollbar {
  display: none;
}
select {
  font: 400 9px roboto, sans-serif;
  -webkit-appearance: none;
  outline: none;
  background: #fff;
  border-radius: 0;
  border: 0;
  padding: 0 4px;
  min-width: 30px;
  text-align: -webkit-center;
  color: #6f6f6f;
}
button {
  outline: none;
  background: #e9e9e9;
  border-radius: 0;
  border: 0;
  padding: 0 8px;
  height: 30px;
  color: #6f6f6f;
  transition: background 0.1s, color 0.1s;
  cursor: pointer;
}
button:hover {
  background: #ddd;
}
a {
  text-decoration: none;
  color: #0098d4;
  cursor: pointer;
}
.ui {
  margin: 8px;
  -webkit-flex-grow: 0;
          flex-grow: 0;
}
.app,
.row,
.column {
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: space-around;
          justify-content: space-around;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  position: relative;
}
.app {
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  width: 100%;
  height: 100%;
  min-width: 720px;
}
.row,
.column {
  -webkit-align-items: stretch;
          align-items: stretch;
  -webkit-justify-content: space-around;
          justify-content: space-around;
  -webkit-flex-basis: 100%;
          flex-basis: 100%;
}
.row {
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
}
.column {
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
}
.row.playback {
  -webkit-flex-basis: 36px;
          flex-basis: 36px;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-grow: 0;
          flex-grow: 0;
}
.column.sidebar {
  -webkit-flex-basis: auto;
          flex-basis: auto;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-grow: 0;
          flex-grow: 0;
}
.row.sequence {
  height: 100%;
}
.row.instrument {
  -webkit-flex-basis: 263px;
          flex-basis: 263px;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-justify-content: flex-start;
          justify-content: flex-start;
  overflow-x: scroll;
}
.pull-left {
  float: left;
}
.pull-right {
  float: right;
}
.text-center {
  text-align: center;
}
body.build-status-building,
body.build-status-error {
  overflow: hidden;
  pointer-events: none;
}
body.build-status-building:before,
body.build-status-error:before {
  content: '';
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 9999999999;
}
body.build-status-building:after,
body.build-status-error:after {
  color: #fff;
  font-size: 18px;
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  padding: 20px;
  text-align: center;
  z-index: 99999999999;
}
body.build-status-building:before {
  background-color: rgba(0,200,30,0.5);
}
body.build-status-building:after {
  content: 'building';
}
body.build-status-error:before {
  background-color: rgba(200,30,0,0.5);
}
body.build-status-error:after {
  content: 'gulp build error';
}
@font-face {
  font-family: 'icons';
  src: url("icons.woff");
  font-weight: normal;
  font-style: normal;
}
.icon {
  font-family: 'icons';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  -webkit-font-smoothing: antialiased;
}
.icon-checkmark:before {
  content: "\e605";
}
.icon-cross:before {
  content: "\e606";
}
.icon-minus:before {
  content: "\e607";
}
.icon-plus:before {
  content: "\e608";
}
.icon-help:before {
  content: "\e603";
}
.icon-cloud:before {
  content: "\e60d";
}
.icon-tape:before {
  content: "\e60e";
}
.icon-play:before {
  content: "\e609";
}
.icon-pause:before {
  content: "\e60a";
}
.icon-record:before {
  content: "\e60b";
}
.icon-stop:before {
  content: "\e60c";
}
.icon-arrow-left:before {
  content: "\e600";
}
.icon-arrow-down:before {
  content: "\e601";
}
.icon-arrow-up:before {
  content: "\e602";
}
.icon-arrow-right:before {
  content: "\e604";
}
.ui.analog {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  margin: 8px;
  min-width: 800px;
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.analog .column.channel {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 46px;
          flex-basis: 46px;
}
.ui.analog .column.oscillators,
.ui.analog .column.filter {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: auto;
          flex-basis: auto;
  -webkit-justify-content: center;
          justify-content: center;
}
.ui.basic-sampler {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  margin: 8px;
  min-width: 800px;
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.basic-sampler .column.channel {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 46px;
          flex-basis: 46px;
}
.ui.basic-sampler .column.envelope {
  -webkit-flex-basis: 50%;
          flex-basis: 50%;
  min-width: 142px;
}
.ui.basic-sampler .column.controls {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: auto;
          flex-basis: auto;
}
.ui.basic-sampler .column.controls .row.sample {
  -webkit-align-items: center;
          align-items: center;
}
.ui.channel {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-flex-basis: 100%;
          flex-basis: 100%;
  margin: 0;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
}
.ui.chooser {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-justify-content: center;
          justify-content: center;
  margin: 0 8px;
}
.ui.chooser .option {
  margin: 4px 0;
  width: 45px;
  padding: 0;
  text-align: center;
  color: #a0a0a0;
  background-color: #ddd;
  transition: background-color 0.1s;
}
.ui.chooser .option:first-child {
  margin-top: 0;
}
.ui.chooser .option:last-child {
  margin-bottom: 0;
}
.ui.chooser .option.selected {
  color: #63d3ff;
  background-color: #fff;
}
.ui.drum-sampler {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  margin: 8px;
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.drum-sampler .column.channel {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 46px;
          flex-basis: 46px;
}
.ui.drum-sampler .column.envelope {
  -webkit-flex-basis: 50%;
          flex-basis: 50%;
}
.ui.drum-sampler .column.control {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: auto;
          flex-basis: auto;
  text-align: center;
}
.ui.drum-sampler .drum {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-justify-content: stretch;
          justify-content: stretch;
}
.ui.drum-synthesizer {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  margin: 8px;
}
.ui.drum-synthesizer .column.channel {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 46px;
          flex-basis: 46px;
}
.ui.drum-synthesizer .drum {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  margin: 8px;
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.drum-synthesizer .drum .column.attrs {
  -webkit-flex-flow: column wrap;
          flex-flow: column wrap;
  -webkit-align-items: flex-start;
          align-items: flex-start;
  -webkit-justify-content: space-between;
          justify-content: space-between;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  width: 132px;
}
.ui.drum-synthesizer .drum .column.control {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: auto;
          flex-basis: auto;
  text-align: center;
}
.ui.drum-synthesizer .drum .knob {
  margin: 0 8px;
}
.ui.drum-synthesizer .drum .knob > label {
  margin: 8px 0;
}
.ui.drum-synthesizer .drum > label {
  margin: 8px 0 0;
}
.ui.envelope {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  height: 100%;
}
.ui.envelope > .control {
  background-color: #ddd;
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.envelope svg {
  stroke-width: 1px;
}
.ui.envelope svg line {
  stroke: #d1d1d1;
}
.ui.envelope svg path {
  stroke: #b8b8b8;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2px;
  fill: none;
}
.ui.envelope svg circle {
  fill: #fff;
}
.ui.envelope svg circle.active {
  fill: #cb9aff;
}
.ui.envelope .knobs {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-justify-content: space-around;
          justify-content: space-around;
  -webkit-align-items: center;
          align-items: center;
}
.ui.envelope .knobs .group {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-justify-content: space-around;
          justify-content: space-around;
}
.ui.envelope .knobs .knob {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-align-items: center;
          align-items: center;
}
.ui.envelope .knobs .knob > .control {
  display: block;
}
.ui.envelope .knobs .knob > label {
  margin: 0 0 0 8px;
  padding: 0 0 0 8px;
  border-top: none;
  border-left: solid 1px #d1d1d1;
}
.ui.envelope > label {
  margin: 0;
}
.ui.knob {
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
}
.ui.knob > .control {
  width: 24px;
  height: 24px;
  margin: 0 auto;
  position: relative;
}
.ui.knob .handle {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #fff;
  transition: background-color 0.1s;
}
.ui.knob .handle:after {
  content: '';
  width: 2px;
  height: calc(50%);
  background-color: #e9e9e9;
  transition: background-color 0.1s;
  position: absolute;
  top: 0;
  left: 11px;
  border-bottom-left-radius: 1px;
  border-bottom-right-radius: 1px;
}
.ui.knob.active .handle {
  background-color: #cb9aff;
}
.ui.knob.active .handle:after {
  background-color: #b166ff;
}
.ui.knob.disabled .handle {
  background-color: #f3f3f3;
}
.ui.knob.disabled .handle:after {
  background-color: #e9e9e9;
}
.ui.list-control {
  min-width: 100px;
  position: relative;
}
.ui.list-control .list {
  border-right: none;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 23px;
  overflow-y: scroll;
  background-color: #d1d1d1;
}
.ui.list-control .list .option {
  padding: 8px;
  background: #ddd;
  position: relative;
  z-index: 2;
}
.ui.list-control .list .option.selected {
  background-color: #e9e9e9;
  border-right: none;
}
.ui.list-control .list .option.dragging {
  background-color: #d1d1d1;
}
.ui.list-control .list .option.dragging > * {
  opacity: 0.5;
}
.ui.list-control .list:after {
  content: '';
  position: absolute;
  z-index: 1;
  top: 0;
  bottom: 0;
  right: 0;
}
.ui.list-control .controls {
  padding: 4px 8px;
  background-color: #ddd;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}
.ui.list-control .controls .icon {
  font-size: 15px;
  line-height: 15px;
  color: #a0a0a0;
}
.ui.list-control .controls .icon:hover {
  color: #6f6f6f;
}
.loading-indicator,
.loading-indicator:before,
.loading-indicator:after {
  width: 6px;
  height: 6px;
  background-color: #ff548f;
  border-radius: 3px !important;
}
.loading-indicator {
  position: relative;
  display: inline-block;
  margin: 0 11px;
  vertical-align: middle;
  -webkit-animation: loading-indicator 0.5s 0.25s infinite alternate;
}
.loading-indicator:after,
.loading-indicator:before {
  content: '';
  position: absolute;
}
.loading-indicator:after {
  left: 9px;
  -webkit-animation: loading-indicator 0.5s 0.5s infinite alternate;
}
.loading-indicator:before {
  left: -9px;
  -webkit-animation: loading-indicator 0.5s 0s infinite alternate;
}
@-webkit-keyframes loading-indicator {
  0% {
    background: #ff548f;
  }
  100% {
    background: #be80ff;
  }
}
.ui.loop-sampler {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row wrap;
          flex-flow: row wrap;
  margin: 8px;
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.loop-sampler .column.channel {
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  -webkit-flex-basis: 46px;
          flex-basis: 46px;
}
.ui.menu {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  margin: 0;
  background-color: #e9e9e9;
  position: absolute;
  bottom: 100%;
  right: 0;
  min-width: 120px;
}
.ui.menu .option {
  padding: 8px;
}
.ui.menu .option:hover {
  background-color: #ddd;
}
.ui.meter {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column-reverse nowrap;
          flex-flow: column-reverse nowrap;
  -webkit-flex-basis: 5px;
          flex-basis: 5px;
  -webkit-justify-content: space-between;
          justify-content: space-between;
  margin: 0 0 0 8px;
  -webkit-align-self: stretch;
          align-self: stretch;
}
.ui.meter div {
  width: 5px;
  height: 5px;
  border-radius: 2.5px;
  background-color: #b8b8b8;
  transition: background-color 0.3s;
}
.ui.meter div.on {
  transition: 0;
}
.ui.meter div.on:nth-child(1) {
  background-color: #b984ff;
  box-shadow: 0 0 1px #b984ff;
}
.ui.meter div.on:nth-child(2) {
  background-color: rgba(181,136,255,1);
  box-shadow: 0 0 1px rgba(181,136,255,1);
}
.ui.meter div.on:nth-child(3) {
  background-color: #b08cff;
  box-shadow: 0 0 1px #b08cff;
}
.ui.meter div.on:nth-child(4) {
  background-color: #ac91ff;
  box-shadow: 0 0 1px #ac91ff;
}
.ui.meter div.on:nth-child(5) {
  background-color: #a795ff;
  box-shadow: 0 0 1px #a795ff;
}
.ui.meter div.on:last-child {
  background-color: #ff548f;
  box-shadow: 0 0 1px #ff548f;
}
.modal-backdrop {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 99;
  background: #000;
  opacity: 0.65;
}
.modal-body {
  z-index: 100;
  position: absolute;
  top: 50%;
  left: 50%;
  background: #e9e9e9;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
}
.modal-body .overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2;
  background-color: rgba(0,0,0,0.3);
}
.modal-body .overlay .loading-indicator {
  position: absolute;
  top: 50%;
  left: 50%;
  margin: -3px -3px;
}
.modal-body .icon {
  font-size: 20px;
  line-height: 20px;
  padding: 4px 8px;
  display: inline-block;
}
.modal-body .icon:hover {
  background: #ddd;
}
.modal-body .icon.active {
  color: #be80ff;
}
.control-modal .row.actions {
  -webkit-flex-basis: 28px;
          flex-basis: 28px;
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
}
.control-modal .row.actions .left,
.control-modal .row.actions .right {
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.control-modal .row.actions .left {
  text-align: left;
}
.control-modal .row.actions .right {
  text-align: right;
}
.dialog-modal {
  font: 400 12px roboto, sans-serif;
}
.dialog-modal .row.header {
  -webkit-flex-basis: 28px;
          flex-basis: 28px;
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
}
.dialog-modal .row.header .title {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  text-align: center;
  line-height: 28px;
  padding: 0 8px;
}
.dialog-modal .row.header .right {
  position: absolute;
  display: block;
  top: 0;
  right: 0;
}
.dialog-modal .column.content {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  background: #ddd;
  padding: 16px;
  -webkit-justify-content: space-between;
          justify-content: space-between;
}
.dialog-modal p {
  margin-bottom: 8px;
}
.dialog-modal .buttons {
  position: relative;
  margin-top: 8px;
}
.dialog-modal button {
  margin-top: 8px;
  display: block;
  width: 100%;
}
.dialog-modal button:hover {
  background: #fff;
}
.dialog-modal button:disabled {
  background: #e9e9e9;
}
.ui.modal-control {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  margin: 0;
}
.ui.modal-control .row.actions {
  -webkit-flex-basis: 28px;
          flex-basis: 28px;
  -webkit-flex-grow: 0;
          flex-grow: 0;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
}
.ui.modal-control .row.actions .left,
.ui.modal-control .row.actions .right {
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.modal-control .row.actions .left {
  text-align: left;
}
.ui.modal-control .row.actions .right {
  text-align: right;
}
.ui.modal-control .row.actions .icon {
  font-size: 20px;
  line-height: 20px;
  padding: 4px 8px;
  display: inline-block;
}
.ui.modal-control .row.actions .icon:hover {
  background: #ddd;
}
.ui.modal-control .row.actions .icon.active {
  color: #be80ff;
}
.ui.oscillator,
.ui.filter {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-flex-basis: 100%;
          flex-basis: 100%;
  -webkit-align-items: center;
          align-items: center;
  -webkit-justify-content: flex-end;
          justify-content: flex-end;
  margin: 8px 0;
}
.ui.oscillator > label,
.ui.filter > label {
  margin: 0 0 0 8px;
  padding: 0 0 0 7px;
  border-top: none;
  width: 40px;
  text-align: left;
}
.ui.oscillator .ui.knob,
.ui.filter .ui.knob {
  margin: 0 8px;
}
.ui.oscilloscope {
  background-color: #d1d1d1;
  width: 50px;
  height: 20px;
}
.ui.piano-roll {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-align-items: stretch;
          align-items: stretch;
  margin: 0;
}
.ui.piano-roll .body {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  background-color: #fff;
  position: relative;
  z-index: 1;
  box-sizing: border-box;
  overflow: scroll;
}
.ui.piano-roll .body .outer,
.ui.piano-roll .body .inner,
.ui.piano-roll .body .keys,
.ui.piano-roll .body .grid {
  position: absolute;
}
.ui.piano-roll .body .keys {
  top: 0;
  left: 0;
  background-color: #e9e9e9;
}
.ui.piano-roll .body .keys rect {
  stroke-width: 0;
}
.ui.piano-roll .body .keys rect.black {
  fill: #b8b8b8;
}
.ui.piano-roll .body .keys rect.on {
  fill: #7adaff;
}
.ui.piano-roll .body .keys line {
  stroke: #b8b8b8;
  stroke-width: 1px;
}
.ui.piano-roll .body .keys text {
  text-anchor: end;
  fill: #a0a0a0;
  dominant-baseline: central;
}
.ui.piano-roll .body .keys text.on {
  fill: #fff;
}
.ui.piano-roll .body .grid {
  left: 40px;
  right: 0;
  top: 0;
  width: 0;
}
.ui.piano-roll .body .grid line {
  stroke: rgba(0,0,0,0.02);
  stroke-width: 1.5px;
}
.ui.piano-roll .body .grid line.strong {
  stroke: rgba(0,0,0,0.09);
}
.ui.piano-roll .body .grid rect.playback {
  fill: rgba(99,211,255,0.2);
}
.ui.piano-roll .body .grid rect.shade {
  fill: rgba(0,0,0,0.02);
}
.ui.piano-roll .body .grid rect.note {
  fill: #ff548f;
  stroke: #ff3279;
  stroke-width: 1.5px;
}
.ui.piano-roll .body .grid rect.note.selected,
.ui.piano-roll .body .grid rect.note.active {
  fill: #ed0052;
  stroke: #cb0046;
}
.ui.piano-roll .body .grid rect.note.ghost {
  opacity: 0.8;
}
.ui.piano-roll .body .grid rect.selection {
  fill: rgba(99,211,255,0.2);
}
.ui.piano-roll .body svg {
  margin: 0;
  display: block;
  top: 0;
  left: 0;
  overflow: hidden;
}
.ui.piano-roll .view-controls {
  background-color: #ddd;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  position: relative;
  z-index: 2;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-justify-content: flex-end;
          justify-content: flex-end;
  -webkit-align-items: center;
          align-items: center;
  padding: 0 8px;
}
.ui.piano-roll .view-controls .scale-handle {
  padding: 0 4px;
  height: 13px;
  background: #d1d1d1;
  color: #a0a0a0;
  margin: 4px 8px;
  text-align: center;
  font: heavy-font;
}
.ui.piano-roll .view-controls .scale-handle:active {
  background-color: #c7c7c7;
}
.ui.piano-roll .view-controls .scale-handle .icon {
  line-height: 13px;
  width: 13px;
  height: 13px;
  display: inline-block;
  font-size: 13px;
  cursor: ns-resize;
}
.ui.piano-roll .view-controls .setting {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-align-items: center;
          align-items: center;
  margin: 4px 8px;
  color: #a0a0a0;
}
.ui.piano-roll .view-controls .setting label {
  margin: 0 8px 0 0;
  padding: 0 7px 0 0;
  border-top: none;
}
.ui.playback-control {
  margin: 0;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: space-between;
          justify-content: space-between;
  background-color: #ddd;
  border-bottom: none;
  position: relative;
}
.ui.playback-control .group {
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
  display: -webkit-flex;
  display: flex;
}
.ui.playback-control .group.playback,
.ui.playback-control .group.menu,
.ui.playback-control .group.controls,
.ui.playback-control .group.tempo {
  -webkit-flex-grow: 0;
          flex-grow: 0;
}
.ui.playback-control .group.fill {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  text-align: right;
  padding: 0 8px;
}
.ui.playback-control select {
  height: 20px;
  margin: 8px;
  background-color: #e9e9e9;
}
.ui.playback-control .ui.knob {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-align-items: center;
          align-items: center;
  margin: 6px 8px;
}
.ui.playback-control .ui.knob label {
  margin: 0 0 0 8px;
  padding: 0 0 0 8px;
  border-left: solid 1px #b8b8b8;
}
.ui.playback-control .icon {
  display: inline-block;
  font-size: 20px;
  line-height: 20px;
  width: 20px;
  height: 20px;
  padding: 8px;
  color: #a0a0a0;
  box-sizing: content-box;
  transition: color 0.1s, background-color 0.1s;
}
.ui.playback-control .icon:hover {
  color: #9061c2;
  background-color: #d1d1d1;
}
.ui.playback-control .icon.active,
.ui.playback-control .icon:active {
  color: #be80ff;
}
.ui.playback-control .logo {
  position: absolute;
  top: 0;
  left: 50%;
  width: 100px;
  margin-left: -50px;
  display: inline-block;
  font: 400 9px roboto, sans-serif;
  font-size: 20px;
  line-height: 20px;
  padding: 8px 0;
  color: #b8b8b8;
  text-align: center;
}
.ui.record-control {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  margin: 0;
}
.ui.record-control .row.sample {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-flex-shrink: 1;
          flex-shrink: 1;
  padding: 4px;
  background: #ddd;
}
.ui.record-control .display {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column-nowrap;
          flex-flow: column-nowrap;
  -webkit-justify-content: center;
          justify-content: center;
}
.ui.record-control .ui.waveform {
  margin: 0;
}
.ui.record-control .instruction {
  -webkit-align-self: center;
          align-self: center;
}
.ui.sample-control {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-flex-basis: 100%;
          flex-basis: 100%;
  position: relative;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
}
.ui.sample-control .controls {
  font-size: 0;
}
.ui.sample-control .controls .control {
  display: inline-block;
  font-size: 15px;
  line-height: 15px;
  padding: 2px;
  color: #a0a0a0;
  transition: color 0.1s;
}
.ui.sample-control .controls .control:hover {
  color: #6f6f6f;
}
.ui.sample-control .controls .file-name {
  float: right;
  padding: 2px 4px;
  line-height: 15px;
  font-size: 9px;
}
.ui.sample-control .display {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  position: relative;
  background-color: #ddd;
}
.ui.sample-control .instruction {
  position: absolute;
  top: 50%;
  line-height: 0;
  width: 100%;
  text-align: center;
}
.ui.sample-control .ui.waveform {
  margin: 4px;
}
.ui.slider {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: column nowrap;
          flex-flow: column nowrap;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  height: 100%;
}
.ui.slider > .control {
  width: 24px;
  -webkit-flex-grow: 1;
          flex-grow: 1;
  margin: 4px auto;
  position: relative;
}
.ui.slider .track {
  position: absolute;
  width: 8px;
  left: 8px;
  margin: -4px 0;
  padding: 4px 0;
  height: 100%;
  box-sizing: content-box;
  background-color: #ddd;
}
.ui.slider .handle {
  position: absolute;
  width: 24px;
  height: 8px;
  margin-top: -4px;
  left: 0;
  background-color: #fff;
  transition: background-color 0.1s;
}
.ui.slider.active .handle {
  background-color: #ff87b0;
}
.ui.track-selection {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  margin: 0;
  width: 160px;
  position: relative;
  background-color: #d1d1d1;
}
.ui.track-selection .tracks {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 28px;
  overflow-y: scroll;
}
.ui.track-selection .track {
  padding: 8px 8px 8px 16px;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-flow: row nowrap;
          flex-flow: row nowrap;
  -webkit-align-items: center;
          align-items: center;
  -webkit-justify-content: space-between;
          justify-content: space-between;
  background-color: #d1d1d1;
  transition: background-color 0.1s;
}
.ui.track-selection .track.selected {
  background-color: #e9e9e9;
}
.ui.track-selection .track.dragging {
  background-color: #cdcdcd;
}
.ui.track-selection .track.dragging > * {
  opacity: 0.5;
}
.ui.track-selection .track .name {
  -webkit-flex-grow: 1;
          flex-grow: 1;
}
.ui.track-selection .track .ui.knob {
  margin: 0 8px;
}
.ui.track-selection .track .ui.knob label {
  border-color: #b8b8b8;
}
.ui.track-selection .controls {
  padding: 4px 8px;
  background-color: #cdcdcd;
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}
.ui.track-selection .controls .icon {
  font-size: 20px;
  line-height: 20px;
}
.ui.track-selection .controls .icon:hover {
  color: #6f6f6f;
}
.ui.waveform {
  -webkit-flex-grow: 1;
          flex-grow: 1;
  -webkit-flex-basis: 100%;
          flex-basis: 100%;
  display: -webkit-flex;
  display: flex;
}
.ui.waveform path {
  fill: #b8b8b8;
}
.ui.waveform path.selection {
  fill: #a0a0a0;
}
.ui.waveform rect.marker {
  fill: #fff;
}
.ui.waveform rect.marker.active {
  fill: #ff87b0;
}
.fade-enter {
  transition: opacity 0.3s;
  opacity: 0;
}
.fade-enter.fade-enter-active {
  opacity: 1;
}
.fade-leave {
  transition: opacity 0.3s;
  opacity: 1;
}
.fade-leave.fade-leave-active {
  opacity: 0;
}
.modal-enter {
  background-color: rgba(0,0,0,0);
  transition: background-color 0.3s;
}
.modal-enter .modal-backdrop {
  opacity: 0;
  transition: opacity 0.3s;
}
.modal-enter .modal-body {
  opacity: 0;
  transition: -webkit-transform 0.3s, opacity 0.3s;
  transition: transform 0.3s, opacity 0.3s;
  -webkit-transform: scale(1.5);
          transform: scale(1.5);
}
.modal-enter.modal-enter-active {
  background-color: rgba(1,0,0,0);
}
.modal-enter.modal-enter-active .modal-backdrop {
  opacity: 0.65;
}
.modal-enter.modal-enter-active .modal-body {
  opacity: 1;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.modal-leave {
  background-color: rgba(0,0,0,0);
  transition: background-color 0.3s;
}
.modal-leave .modal-backdrop {
  transition: opacity 0.3s;
}
.modal-leave .modal-body {
  transition: opacity 0.3s, -webkit-transform 0.3s;
  transition: opacity 0.3s, transform 0.3s;
  -webkit-transform: scale(1);
          transform: scale(1);
}
.modal-leave-active {
  background-color: rgba(1,0,0,0);
}
.modal-leave-active .modal-backdrop {
  opacity: 0;
}
.modal-leave-active .modal-body {
  opacity: 0;
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
}
.track-enter {
<<<<<<< HEAD
  transition: -webkit-transform 0.3s, opacity 0.3s !important;
  transition: transform 0.3s, opacity 0.3s !important;
  opacity: 0;
=======
  -webkit-transition: -webkit-transform 0.3s, opacity 0.3s !important;
  opacity: 0.01;
>>>>>>> display names, update react version
  -webkit-transform: translate(30%, 0);
          transform: translate(30%, 0);
}
.track-enter.track-enter-active {
  opacity: 1;
  -webkit-transform: translate(0);
          transform: translate(0);
}
.track-leave {
  transition: -webkit-transform 0.3s, opacity 0.3s !important;
  transition: transform 0.3s, opacity 0.3s !important;
  background-color: #d1d1d1;
  opacity: 1;
  -webkit-transform: translate(0);
          transform: translate(0);
}
.track-leave.track-leave-active {
  opacity: 0.01;
  -webkit-transform: translate(-30%, 0);
          transform: translate(-30%, 0);
}
<<<<<<< HEAD
/*# sourceMappingURL=data:application/json;base64, */
=======
/*# sourceMappingURL=data:application/json;base64, */
>>>>>>> display names, update react version
